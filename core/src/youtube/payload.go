package youtube

import (
	"encoding/json"
	"log"
)

// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

type Payload struct {
	Context  Context `json:"context"`
	BrowseID string  `json:"browseId"`
	Query    string  `json:"query"`
}
type Client struct {
	ClientName       string        `json:"clientName"`
	ClientVersion    string        `json:"clientVersion"`
	Hl               string        `json:"hl"`
	Gl               string        `json:"gl"`
	ExperimentIds    []interface{} `json:"experimentIds"`
	ExperimentsToken string        `json:"experimentsToken"`
	Theme            string        `json:"theme"`
}
type Capabilities struct {
}
type Request struct {
	InternalExperimentFlags []interface{} `json:"internalExperimentFlags"`
}
type Context struct {
	Client       Client       `json:"client"`
	Capabilities Capabilities `json:"capabilities"`
	Request      Request      `json:"request"`
}

var _defaultPayload = map[string]interface{}{
	"context": map[string]interface{}{
		"client": map[string]interface{}{
			"clientName":       "WEB_MUSIC_ANALYTICS",
			"clientVersion":    "0.2",
			"hl":               "en",
			"gl":               "TW",
			"experimentIds":    []string{},
			"experimentsToken": "",
			"theme":            "MUSIC",
		},
		"capabilities": map[string]interface{}{},
		"request": map[string]interface{}{
			"internalExperimentFlags": []string{},
		},
	},
	"browseId": "FEmusic_analytics_charts_home",
	"query":    "chart_params_type=WEEK&perspective=CHART&flags=viral_video_chart&selected_chart=TRACKS&chart_params_id=weekly%3A0%3A0%3Akr",
}

func NewPayload() *Payload {
	var res Payload
	data, err := json.Marshal(_defaultPayload)
	if err != nil {
		log.Panicln(err)
	}

	err = json.Unmarshal(data, &res)
	if err != nil {
		log.Panicln(err)
	}

	return &res
}
